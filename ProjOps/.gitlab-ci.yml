variables:
  FRONTEND_IMAGE_NAME: registry.gitlab.com/s.miyoshi/projfrontend/master/sample-frontend
  FRONTEND_VERSION: "1.0"
  APISERVER_IMAGE_NAME: registry.gitlab.com/s.miyoshi/projbackend/master/sample-apiserver
  APISERVER_VERSION: "1.0"
  MYSQL_IMAGE_NAME: registry.gitlab.com/s.miyoshi/projbackend/master/sample-mysql
  MYSQL_VERSION: "1.0"

stages:
  - staging_deploy
  - ops_test
  - canary_release
  - production_deploy

staging_deploy:
  stage: staging_deploy
  image: smiyoshi/istioctl
  script:
    - sh create-k8s-deploy.sh "staging" $FRONTEND_IMAGE_NAME $FRONTEND_VERSION $APISERVER_IMAGE_NAME $APISERVER_VERSION $MYSQL_IMAGE_NAME $MYSQL_VERSION
    - kubectl get pods --all-namespaces --kubeconfig=config
    - istioctl kube-inject -f k8s-deploy.yaml --kubeconfig=config > istio-deploy.yaml
    - kubectl apply -f istio-deploy.yaml --kubeconfig=config
    - cat k8s-deploy.yaml # for debug

fault_injecting_test:
  stage: ops_test
  image: lachlanevenson/k8s-kubectl
  when: manual
  allow_failure: false
  environment:
    name: fault_injection/$CI_COMMIT_REF_NAME
    on_stop: cleanup_fault_injecting_test
  script:
    - kubectl apply -f apiserver_delay.yaml --kubeconfig=config

cleanup_fault_injecting_test:
  stage: ops_test
  image: lachlanevenson/k8s-kubectl
  environment:
    name: fault_injection/$CI_COMMIT_REF_NAME
    action: stop
  script:
    - kubectl delete -f apiserver_delay.yaml --ignore-not-found=true --kubeconfig=config
  when: manual
  allow_failure: false

canary_release_80_20:
  stage: canary_release
  image: lachlanevenson/k8s-kubectl
  when: manual
  allow_failure: false
  environment:
    name: canary_release/$CI_COMMIT_REF_NAME
    on_stop: cleanup_canary_release_80_20
  script:
    - echo "!!!!!!!!!!!TODO!!!!!!!!!!!"
    - echo "kubectl apply -f canary_frontend_80_20.yaml"

cleanup_canary_release_80_20:
  stage: canary_release
  image: lachlanevenson/k8s-kubectl
  environment:
    name: canary_release/$CI_COMMIT_REF_NAME
    action: stop
  script:
    - echo "!!!!!!!!!!!TODO!!!!!!!!!!!"
    - echo "stop canary release"
  when: manual
  allow_failure: false

production_deploy:
  stage: production_deploy
  image: smiyoshi/istioctl
  script:
    - echo "!!!!!!!!!!!TODO!!!!!!!!!!!"
    - echo "if success to canary release, deploy to production"
    - echo "istioctl kube-inject -f ... > ..."
    - echo "kubectl apply -f ... --kubeconfig=..."
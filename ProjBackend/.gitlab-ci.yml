variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  APP_NAME_APISERVER: sample-apiserver
  APP_NAME_MYSQL: sample-mysql
  APP_VERSION: "1.0"
#  APP_VERSION: $CI_PROJECT_ID.$CI_PIPELINE_ID # for Continuous Delivery
  APISERVER_IMAGE_NAME: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/$APP_NAME_APISERVER
  APISERVER_IMAGE_VERSION: $APP_VERSION
  MYSQL_IMAGE_NAME: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/$APP_NAME_MYSQL
  MYSQL_IMAGE_VERSION: $APP_VERSION

stages:
  - build
  - test
  - review

build:
  stage: build
  image: docker:stable-git
  services:
  - docker:stable-dind
  before_script:
    - apk update
    - apk add make
    - export
    - docker info
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - make build
    - make ci_push
  only:
    - branches

unit_test:
  stage: test
  image: busybox
  script:
    - echo 'unit testing...'
  only:
    - branches
  except:
    - master

deploy_review_app:
  stage: review
  image: lachlanevenson/k8s-kubectl
  environment:
    name: review/$CI_COMMIT_REF_NAME
    on_stop: cleanup_review_app
  allow_failure: false
  before_script:
    - kubectl version --short
  script:
    - sh create-k8s-deploy.sh $APISERVER_IMAGE_NAME $APISERVER_IMAGE_VERSION $MYSQL_IMAGE_NAME $MYSQL_IMAGE_VERSION
    - kubectl apply -f k8s-deploy.yaml --kubeconfig=config
  only:
    - branches
  except:
    - master

cleanup_review_app:
  stage: review
  image: lachlanevenson/k8s-kubectl
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  script:
    - sh create-k8s-deploy.sh $APISERVER_IMAGE_NAME $APISERVER_IMAGE_VERSION $MYSQL_IMAGE_NAME $MYSQL_IMAGE_VERSION
    - kubectl delete -f k8s-deploy.yaml --ignore-not-found=true --kubeconfig=config
  when: manual
  only:
    - branches
  except:
    - master
